# import streamlit as st

# # Configure the page
# st.set_page_config(
#     page_title="PT B√°ch ‚ù§Ô∏èüîí Th·∫£o Linh",
#     layout="centered"
# )

# # ---- Title ----
# st.title("PT B√°ch ‚ù§Ô∏èüîí Th·∫£o Linh")

# # ---- Image Section ----
# st.header("Our Favorite Photos")
# cols = st.columns(2)

# # Replace the paths below with your actual image file paths or URLs
# with cols[0]:
#     st.image("images/bach.jpg", caption="B√°ch", use_container_width=True)
# with cols[1]:
#     st.image("images/linh.jpg", caption="Th·∫£o Linh", use_container_width=True)

# # ---- Relationship Summary ----
# st.header("Timeline")

# st.write(
#     """
# - **L·∫ßn ƒë·∫ßu n√≥i chuy·ªán**: 11/04/2025
# - **X√≥a bi·ªát hi·ªáu**: 01/05/2025
# - **T·ªè t√¨nh**: 20/05/2025
# """
# )

# # ---- Footer ----
# st.markdown("---")
# st.caption("Made with ‚ù§Ô∏è by PT B√°ch for Th·∫£o Linh")

import streamlit as st

st.set_page_config(layout="centered", page_title="B√†i Th∆° T∆∞∆°ng T√°c (Tooltip D√≤ng)", initial_sidebar_state="expanded")

# D·ªØ li·ªáu b√†i th∆° v·ªõi ch√∫ gi·∫£i chi ti·∫øt t·ª´ng d√≤ng/ƒëo·∫°n
poem_data_detailed = [
    {
        "stanza_number": 1,
        "lines": [
            {"text": "√Åo em tr·∫Øng qu√° nh√¨n kh√¥ng ra", "annotation": "G·ª£i h√¨nh ·∫£nh trong s√°ng, tinh kh√¥i. M√†u √°o tr·∫Øng t∆∞·ª£ng tr∆∞ng cho s·ª± thu·∫ßn khi·∫øt."},
            {"text": "H√†ng c√¢y ƒë·ª©ng ƒë√≥ c≈©ng nh∆∞ l√†", "annotation": None}, # Kh√¥ng c√≥ ch√∫ gi·∫£i cho d√≤ng n√†y
            {"text": "B√≥ng m√°t che ri√™ng ƒë·ªùi ch√∫ng ta", "annotation": "S·ª± che ch·ªü, g·∫Øn b√≥ m·∫≠t thi·∫øt. T√¨nh y√™u ƒë√¥i l·ª©a ƒë∆∞·ª£c v√≠ nh∆∞ b√≥ng m√°t an l√†nh."},
            {"text": "Ng√≥n tay thon th·∫£ ng·∫Øt l√° ƒëa.", "annotation": "H√†nh ƒë·ªông tinh t·∫ø, nh·∫π nh√†ng, th·ªÉ hi·ªán s·ª± d·ªãu d√†ng c·ªßa ng∆∞·ªùi con g√°i."}
        ]
    },
    {
        "stanza_number": 2,
        "lines": [
            {"text": "Chi·ªÅu nay ti·∫øng h√°t v·∫≥ng trong m∆∞a", "annotation": "Kh√¥ng gian l√£ng m·∫°n, h∆°i bu·ªìn. Ti·∫øng h√°t trong m∆∞a mang l·∫°i c·∫£m x√∫c s√¢u l·∫Øng."},
            {"text": "Anh nh·ªõ em nhi·ªÅu bi·∫øt m·∫•y cho v·ª´a", "annotation": "N·ªói nh·ªõ s√¢u s·∫Øc, da di·∫øt, kh√¥ng th·ªÉ ƒëong ƒë·∫øm ƒë∆∞·ª£c."},
            {"text": "Em ∆°i th√¥i nh√© ƒë·ª´ng bu·ªìn n·ªØa", "annotation": "L·ªùi an ·ªßi, v·ªó v·ªÅ t·ª´ ng∆∞·ªùi y√™u."},
            {"text": "Ph√≠a cu·ªëi con ƒë∆∞·ªùng v·∫´n c√≥ ta.", "annotation": "S·ª± h·ª©a h·∫πn, ƒë·ªìng h√†nh, ni·ªÅm tin v√†o t∆∞∆°ng lai."}
        ]
    },
    {
        "stanza_number": 3,
        "lines": [
            {"text": "TrƒÉng v√†ng hiu h·∫Øt gi·ªØa kh√¥ng gian", "annotation": "C·∫£nh v·∫≠t tƒ©nh l·∫∑ng, c√≥ ch√∫t u ho√†i, g·ª£i suy t∆∞ v·ªÅ v≈© tr·ª•."},
            {"text": "Gi√≥ tho·∫£ng h∆∞∆°ng x∆∞a th·ªïi nh·∫π nh√†ng", "annotation": "G·ª£i nh·ªõ k·ª∑ ni·ªám, c·∫£m x√∫c x∆∞a c≈©. H∆∞∆°ng x∆∞a mang theo nh·ªØng k√Ω ·ª©c ng·ªçt ng√†o."},
            {"text": "Ng·ª° ng√†ng b·ªóng th·∫•y bao la l·∫Øm", "annotation": "C·∫£m gi√°c ng·ª° ng√†ng tr∆∞·ªõc s·ª± r·ªông l·ªõn, v√¥ t·∫≠n c·ªßa v≈© tr·ª•."},
            {"text": "Cu·ªôc ƒë·ªùi n√†y v·∫´n ƒë·∫πp v√¥ v√†n.", "annotation": "Th√¥ng ƒëi·ªáp l·∫°c quan v·ªÅ v·∫ª ƒë·∫πp ti·ªÅm ·∫©n c·ªßa cu·ªôc s·ªëng, d√π c√≥ l√∫c kh√≥ khƒÉn."}
        ]
    }
]

st.title("B√†i Th∆° T∆∞∆°ng T√°c: √Åo Tr·∫Øng (Tooltip Theo D√≤ng)")
st.write("Di chu·ªôt (hover) v√†o c√°c d√≤ng th∆° **ƒë∆∞·ª£c g·∫°ch ch√¢n** ƒë·ªÉ xem ch√∫ gi·∫£i!")

# --- CSS v√† JavaScript ƒë∆∞·ª£c ƒë·∫∑t trong m·ªôt kh·ªëi duy nh·∫•t ƒë·ªÉ qu·∫£n l√Ω t·ªët h∆°n ---
st.markdown(f"""
<style>
/* Reset m·ªôt s·ªë margin/padding m·∫∑c ƒë·ªãnh ƒë·ªÉ ki·ªÉm so√°t b·ªë c·ª•c t·ªët h∆°n */
p {{ margin: 0; padding: 0; }}

/* Streamlit theme variables (t√πy ch·ªânh m√†u s·∫Øc) */
:root {{ /* Light Mode default */
    --text-color: #31333F;
    --background-color: #FFFFFF;
    --secondary-background-color: #F0F2F6;
    --primary-color: #FF4B4B;

    --poem-bg-color: var(--secondary-background-color);
    --poem-text-color: var(--text-color);

    --tooltip-bg-color: #333;
    --tooltip-text-color: #f9f9f9;
    --highlight-underline-color: #007bff; /* Underline color */
    --highlight-text-color-light: #007bff; /* Color for underlined text in light mode */
}}

[data-baseweb="dark"] {{ /* Dark Mode specific colors */
    --text-color: #FAFAFA;
    --background-color: #0E1117;
    --secondary-background-color: #1A1C20;
    --primary-color: #FF4B4B;

    --poem-bg-color: var(--secondary-background-color);
    --poem-text-color: var(--text-color);

    --tooltip-bg-color: #555;
    --tooltip-text-color: #FAFAFA;
    --highlight-underline-color: #4CAF50; /* Green for dark mode highlights */
    --highlight-text-color-dark: #4CAF50; /* Color for underlined text in dark mode */
}}

/* ƒê·ªãnh d·∫°ng chung cho body */
body {{
    color: var(--text-color);
}}

/* Container ch√≠nh bao quanh to√†n b·ªô b√†i th∆° */
.poem-container {{
    font-family: 'Times New Roman', Times, serif; /* Font ch·ªØ th∆° */
    font-size: 1.2em; /* TƒÉng k√≠ch th∆∞·ªõc ch·ªØ */
    line-height: 1.8;
    margin-bottom: 30px;
    padding: 25px;
    border-radius: 8px;
    background-color: var(--poem-bg-color);
    color: var(--poem-text-color);
    box-shadow: 0 2px 10px rgba(0,0,0,0.1);
}}

/* ƒê·ªãnh d·∫°ng cho t·ª´ng kh·ªï th∆° */
.stanza {{
    margin-bottom: 2em; /* Kho·∫£ng c√°ch gi·ªØa c√°c kh·ªï th∆° */
    padding-top: 1em; /* Kho·∫£ng c√°ch tr√™n ƒë·∫ßu kh·ªï th∆° */
}}

/* ƒê·ªãnh d·∫°ng cho c√°c d√≤ng th∆° c√≥ ch√∫ gi·∫£i */
.annotated-line {{
    position: relative; /* Quan tr·ªçng cho vi·ªác ƒë·ªãnh v·ªã tooltip */
    cursor: help; /* Con tr·ªè chu·ªôt h√¨nh d·∫•u h·ªèi */
    text-decoration: underline; /* G·∫°ch ch√¢n ƒë·ªÉ d·ªÖ nh·∫≠n bi·∫øt */
    text-decoration-color: var(--highlight-underline-color);
    text-underline-offset: 3px;
    text-decoration-thickness: 1px;
    /* ƒêi·ªÅu ch·ªânh m√†u ch·ªØ ri√™ng cho d√≤ng ƒë∆∞·ª£c highlight */
    color: var(--text-color); /* M·∫∑c ƒë·ªãnh theo theme */
    /* Khi ·ªü Light Mode, √°p d·ª•ng m√†u highlight ri√™ng */
    [data-baseweb="light"] & {{
        color: var(--highlight-text-color-light);
    }}
    /* Khi ·ªü Dark Mode, √°p d·ª•ng m√†u highlight ri√™ng */
    [data-baseweb="dark"] & {{
        color: var(--highlight-text-color-dark);
    }}
}}

/* Tooltip style */
.custom-tooltip {{
    display: none; /* ·∫®n m·∫∑c ƒë·ªãnh */
    position: absolute;
    z-index: 1000; /* ƒê·∫£m b·∫£o tooltip n·∫±m tr√™n c√πng */
    padding: 10px 15px;
    background-color: var(--tooltip-bg-color);
    color: var(--tooltip-text-color);
    border-radius: 5px;
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.3);
    font-size: 0.9em;
    line-height: 1.4;
    max-width: 280px; /* Gi·ªõi h·∫°n chi·ªÅu r·ªông tooltip */
    text-align: left;
    white-space: normal; /* Cho ph√©p ch√∫ gi·∫£i xu·ªëng d√≤ng */
    opacity: 0;
    transition: opacity 0.2s ease-in-out;
}}

.custom-tooltip.show {{
    opacity: 1;
    display: block;
}}

/* NgƒÉn tr√¨nh duy·ªát hi·ªÉn th·ªã tooltip m·∫∑c ƒë·ªãnh cho title attribute (n·∫øu c√≥) */
[data-annotation]:hover::before,
[data-annotation]:hover::after {{
    display: none !important;
}}
</style>

<script>
document.addEventListener('DOMContentLoaded', function() {{
    const annotatedLines = document.querySelectorAll('.annotated-line');
    let tooltip = document.getElementById('customPoemTooltip');

    // N·∫øu tooltip ch∆∞a t·ªìn t·∫°i (v√≠ d·ª• Streamlit refresh), t·∫°o n√≥
    if (!tooltip) {{
        tooltip = document.createElement('div');
        tooltip.id = 'customPoemTooltip';
        tooltip.classList.add('custom-tooltip');
        document.body.appendChild(tooltip); // Th√™m v√†o body ƒë·ªÉ d·ªÖ ƒë·ªãnh v·ªã tuy·ªát ƒë·ªëi
        console.log("Tooltip element created and appended.");
    }} else {{
        // Reset tooltip ƒë·ªÉ tr√°nh l·ªói n·∫øu Streamlit refresh
        tooltip.classList.remove('show');
        tooltip.innerHTML = '';
        console.log("Existing tooltip element found and reset.");
    }}


    annotatedLines.forEach(line => {{
        line.addEventListener('mouseenter', function(event) {{ // D√πng mouseenter ƒë·ªÉ tr√°nh bubbling
            const annotationText = this.getAttribute('data-annotation');
            if (annotationText) {{
                tooltip.innerHTML = annotationText;
                tooltip.classList.add('show');

                // L·∫•y v·ªã tr√≠ c·ªßa d√≤ng th∆°
                const rect = this.getBoundingClientRect();
                const scrollLeft = window.pageXOffset || document.documentElement.scrollLeft;
                const scrollTop = window.pageYOffset || document.documentElement.scrollTop;

                // T√≠nh to√°n v·ªã tr√≠ c·ªßa tooltip
                // ƒê·∫∑t tooltip ph√≠a tr√™n v√† gi·ªØa d√≤ng
                let tooltipX = rect.left + scrollLeft + (rect.width / 2) - (tooltip.offsetWidth / 2);
                let tooltipY = rect.top + scrollTop - tooltip.offsetHeight - 10; // 10px above the line

                // ƒê·∫£m b·∫£o tooltip kh√¥ng b·ªã tr√†n ra ngo√†i m√†n h√¨nh b√™n tr√°i
                if (tooltipX < scrollLeft + 5) {{ // 5px padding from left edge
                    tooltipX = scrollLeft + 5;
                }}
                // ƒê·∫£m b·∫£o tooltip kh√¥ng b·ªã tr√†n ra ngo√†i m√†n h√¨nh b√™n ph·∫£i
                if (tooltipX + tooltip.offsetWidth > window.innerWidth + scrollLeft - 5) {{ // 5px padding from right edge
                    tooltipX = window.innerWidth + scrollLeft - tooltip.offsetWidth - 5;
                }}
                // ƒê·∫£m b·∫£o tooltip kh√¥ng b·ªã tr√†n ra ngo√†i m√†n h√¨nh ph√≠a tr√™n
                if (tooltipY < scrollTop + 5) {{ // If no space above, put it below
                    tooltipY = rect.bottom + scrollTop + 10;
                }}

                tooltip.style.left = tooltipX + 'px';
                tooltip.style.top = tooltipY + 'px';
                console.log("Tooltip displayed for line:", this.id);
            }}
        }});

        line.addEventListener('mouseleave', function() {{ // D√πng mouseleave
            tooltip.classList.remove('show');
            tooltip.innerHTML = ''; // Clear content
            console.log("Tooltip hidden for line:", this.id);
        }});
    }});
}});
</script>
""", unsafe_allow_html=True)


# --- Hi·ªÉn th·ªã b√†i th∆° v·ªõi c√°c d√≤ng ƒë∆∞·ª£c ƒë√°nh d·∫•u ---
html_poem_structure = ""
for stanza_idx, stanza in enumerate(poem_data_detailed):
    html_poem_structure += f'<div class="stanza" id="stanza-{stanza_idx}">'
    for line_idx, line_data in enumerate(stanza["lines"]):
        line_text = line_data["text"]
        annotation = line_data["annotation"]

        # S·ª≠ d·ª•ng f-string ƒë·ªÉ escape d·∫•u ngo·∫∑c k√©p trong annotation n·∫øu c·∫ßn (JSON.stringify)
        # Ho·∫∑c ƒë·∫£m b·∫£o ch√∫ gi·∫£i kh√¥ng ch·ª©a d·∫•u ngo·∫∑c k√©p kh√¥ng ƒë∆∞·ª£c escape
        escaped_annotation = annotation.replace('"', '&quot;') if annotation else ''

        if annotation:
            # B·ªçc d√≤ng th∆° c·∫ßn ch√∫ gi·∫£i trong <span> v·ªõi class v√† data-annotation
            # M·ªói d√≤ng ƒë·ªÅu n·∫±m trong th·∫ª <p> ri√™ng ƒë·ªÉ d·ªÖ ki·ªÉm so√°t layout
            html_poem_structure += f'<p><span class="annotated-line" id="line-{stanza_idx}-{line_idx}" data-annotation="{escaped_annotation}">{line_text}</span></p>'
        else:
            html_poem_structure += f'<p>{line_text}</p>'
    html_poem_structure += '</div>'

# Th√™m container cho to√†n b·ªô b√†i th∆° v√† tooltip element
# Vi·ªác th√™m customPoemTooltip v√†o body trong JS s·∫Ω gi√∫p n√≥ ƒë·ªãnh v·ªã ch√≠nh x√°c h∆°n
st.markdown(f'<div class="poem-container">{html_poem_structure}</div>', unsafe_allow_html=True)

st.sidebar.header("Th√¥ng Tin")
st.sidebar.info("Di chu·ªôt v√†o c√°c d√≤ng th∆° ƒë∆∞·ª£c g·∫°ch ch√¢n ƒë·ªÉ xem ch√∫ gi·∫£i chi ti·∫øt cho t·ª´ng d√≤ng.")